{
	"info": {
		"_postman_id": "15af27ec-dcd1-4956-a069-5bd379a04695",
		"name": "TourmalineCore.AspNetCore.JwtAuthentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Example.Net5.0.CookiesBasedAuthentication",
			"item": [
				{
					"name": "Call authorized endpoint without token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.cookies.clear();"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/example",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cookie is present\", function () {\r",
									"    pm.response.cookies.has(\"ExampleCookieName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"login\": \"Admin\", \"password\": \"Admin\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/auth/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Call authorized endpoint with token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/example",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"example"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Example.Net5.0.RefreshTokenAuthAndRegistrationUsingIdentity",
			"item": [
				{
					"name": "Call authorized endpoint without token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.cookies.clear();"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/example",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Access token is present\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.accessToken.value).to.be.not.null;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"login\": \"{{LOGIN}}\", \"password\": \"{{PASSWORD}}\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/auth/register",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Access and refresh tokens are present\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    const accessToken = jsonData.accessToken.value;\r",
									"    const refreshToken = jsonData.refreshToken.value;\r",
									"\r",
									"    pm.expect(accessToken).to.be.not.null;\r",
									"    pm.expect(refreshToken).to.be.not.null;\r",
									"\r",
									"    pm.variables.set(\"ACCESS_TOKEN\", accessToken);\r",
									"    pm.variables.set(\"REFRESH_TOKEN\", refreshToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"login\": \"{{LOGIN}}\", \"password\": \"{{PASSWORD}}\", \"ClientFingerPrint\": \"{{FINGERPRINT}}\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/auth/login",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Access and refresh tokens are present\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    const accessToken = jsonData.accessToken.value;\r",
									"    const refreshToken = jsonData.refreshToken.value;\r",
									"\r",
									"    pm.expect(accessToken).to.be.not.null;\r",
									"    pm.expect(refreshToken).to.be.not.null;\r",
									"\r",
									"    pm.variables.set(\"ACCESS_TOKEN\", accessToken);\r",
									"    pm.variables.set(\"REFRESH_TOKEN\", refreshToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"RefreshTokenValue\": \"{{REFRESH_TOKEN}}\", \"ClientFingerPrint\": \"{{FINGERPRINT}}\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/auth/refresh",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Call authorized endpoint with token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/example",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Logout returned true\", function () {\r",
									"    pm.response.to.have.body(\"true\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"RefreshTokenValue\": \"{{REFRESH_TOKEN}}\", \"ClientFingerPrint\": \"{{FINGERPRINT}}\" }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HOST}}/auth/logout",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Call authorized endpoint without token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.cookies.clear();"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{HOST}}/example",
							"host": [
								"{{HOST}}"
							],
							"path": [
								"example"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "ACCESS_TOKEN",
			"value": ""
		},
		{
			"key": "REFRESH_TOKEN",
			"value": ""
		}
	]
}